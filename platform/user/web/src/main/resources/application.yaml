spring:
  application:
    name: users

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,httptrace"
      base-path: /actuator

--- # local

spring:
  config:
    activate:
      on-profile: local
  cloud:
    config:
      enabled: false
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
server:
  port: 8001
  servlet:
    context-path: /
eureka:
  client:
    enabled: false

--- # dev

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/digiboy
    username: digiboy
    password: 123456
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: users
        jdbc:
          lob:
            non_contextual_creation: true

server:
  port: 8001
  servlet:
    context-path: /

eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
--- # stage

spring:
  config:
    activate:
      on-profile: stage
  datasource:
    url: jdbc:postgresql://postgres:5432/digiboy
    username: digiboy
    password: 123456
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: users
        jdbc:
          lob:
            non_contextual_creation: true

server:
  port: 80
  servlet:
    context-path: /

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-discovery-service:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

--- # prod

spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: users
        jdbc:
          lob:
            non_contextual_creation: true

server:
  port: 0
  servlet:
    context-path: /

--- # test

spring:
  config:
    activate:
      on-profile: test
  cloud:
    config:
      enabled: false
eureka:
  client:
    enabled: false
